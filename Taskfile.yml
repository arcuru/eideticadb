# https://taskfile.dev

version: "3"

tasks:
  default:
    cmd: task --list
    silent: true
  ci:full:
    desc: Run CI locally in containers
    cmd: act
  ci:local:
    desc: Run CI locally
    aliases: [ci]
    deps: [audit, doc, fmt, test, clippy, build, examples]
  ci:nix:
    desc: Run Nix CI checks
    deps: [nix:check]
  nix:check:
    desc: Run Nix CI checks
    cmds:
      - nix flake check
  nix:build:
    desc: Run Nix Build
    cmds:
      - nix build
  clippy:
    desc: Run clippy
    cmds:
      - cargo clippy --workspace --all-targets --all-features -- -D warnings
  clippy:fix:
    desc: Run clippy fixes
    cmds:
      - cargo clippy --workspace --fix --allow-dirty --all-targets --all-features -- -D warnings
  fmt:
    desc: Run all formatters
    cmds:
      - cargo fmt --all
      - alejandra .
      - prettier --write .
  test:
    desc: Run all tests
    aliases: [t]
    cmd: cargo nextest run --workspace --all-features
  doc:
    desc: Build the documentation
    cmd: cargo doc --workspace --all-features
  audit:
    desc: Run cargo security/license audit
    cmds:
      - cargo audit
      - cargo deny check
  build:debug:
    desc: Build the project
    aliases: [b, build]
    cmd: cargo build --workspace --all-targets --all-features
  build:release:
    desc: Build the project release
    aliases: [br, release]
    cmd: cargo build --workspace --all-targets --all-features --release
  coverage:
    desc: Generate coverage data
    aliases: [cov]
    cmd: cargo tarpaulin --workspace --skip-clean --include-tests --all-features --output-dir coverage --out lcov
  examples:
    desc: Build/Check all examples
    cmds:
      - cd examples/todo && cargo build --all-targets --all-features
      - cd examples/todo && cargo clippy --all-targets --all-features -- -D warnings
